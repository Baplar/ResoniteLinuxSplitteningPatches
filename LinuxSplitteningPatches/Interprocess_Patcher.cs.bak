//////////////////////
// Disabled for now //
//////////////////////
// It seems to work better without, anyway. More tests necessary.
//

using HarmonyLib;

using System.Runtime.InteropServices;

namespace LinuxSplitteningPatches;

[HarmonyPatch("Cloudtoid.Interprocess.InterprocessSemaphore", "CreateWaiter")]
public static class CreateWaiter_Patch {

    public static void Postfix(string name, ref object __result) {
        if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows) && Util.IsWine) {
            __result = AccessTools.TypeByName("Cloudtoid.Interprocess.Semaphore.Linux.SemaphoreLinux").Constructor().Invoke([name]);
        }
    }
}

[HarmonyPatch("Cloudtoid.Interprocess.InterprocessSemaphore", "CreateReleaser")]
public static class CreateReleaser_Patch {

    public static void Postfix(string name, ref object __result) {
        if (RuntimeInformation.IsOSPlatform(OSPlatform.Windows) && Util.IsWine) {
            __result = AccessTools.TypeByName("Cloudtoid.Interprocess.Semaphore.Linux.SemaphoreLinux").Constructor().Invoke([name]);
        }
    }
}
